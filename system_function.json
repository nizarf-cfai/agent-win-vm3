[
    {
        "name": "navigate_canvas",
        "description": "Navigate canvas to item with optional sub-element targeting for precise navigation",
        "parameters": {
            "type": "object",
            "properties": {
                "objectId": {
                    "type": "string",
                    "description": "ObjectId to navigate to (e.g., 'dashboard-item-patientcontext-1234')"
                },
                "subElement": {
                    "type": "string",
                    "description": "Optional sub-element within the object to focus on (e.g., 'medications.methotrexate', 'lab-results.alt', 'vitals.blood-pressure')"
                }
            },
            "required": ["objectId"]
        }
    },
    {
        "name": "generate_task",
        "description": "Generate a comprehensive task workflow with structured todos, sub-tasks, agents, and status tracking",
        "parameters": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Main title of the task workflow"
                },
                "description": {
                    "type": "string",
                    "description": "Comprehensive description of the task workflow"
                },
                "todos": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique identifier for the task"
                            },
                            "text": {
                                "type": "string",
                                "description": "Task description"
                            },
                            "status": {
                                "type": "string",
                                "enum": ["pending", "executing", "finished"],
                                "description": "Current status of the task"
                            },
                            "agent": {
                                "type": "string",
                                "description": "Agent responsible for executing this task"
                            },
                            "subTodos": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "text": {
                                            "type": "string",
                                            "description": "Sub-task description"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": ["pending", "executing", "finished"],
                                            "description": "Status of the sub-task"
                                        }
                                    },
                                    "required": ["text", "status"]
                                },
                                "description": "Array of sub-tasks for this main task"
                            }
                        },
                        "required": ["id", "text", "status", "agent", "subTodos"]
                    },
                    "description": "Array of main tasks with their sub-tasks, agents, and status"
                }
            },
            "required": ["title", "description", "todos"]
        }
    },
    {
        "name": "generate_lab_result",
        "description": "Generate a lab result with value, unit, status, range, and trend information. If the data not available, generate it.",
        "parameters": {
            "type": "object",
            "properties": {
                "parameter": {
                    "type": "string",
                    "description": "Name of the medical parameter (e.g., Aspartate Aminotransferase) If not provided use the most relevant parameter"
                },
                "value": {
                    "type": "string",
                    "description": "The measured value of the parameter, generate it if not provided"
                },
                "unit": {
                    "type": "string",
                    "description": "Unit of measurement (e.g., U/L, mg/dL, etc.) generate it if not provided"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the parameter (optimal, warning, critical) generate it if not provided"
                },
                "range": {
                    "type": "object",
                    "properties": {
                        "min": {
                            "type": "number",
                            "description": "Minimum normal value generate it if not provided"
                        },
                        "max": {
                            "type": "number",
                            "description": "Maximum normal value generate it if not provided"
                        },
                        "warningMin": {
                            "type": "number",
                            "description": "Minimum warning threshold generate it if not provided"
                        },
                        "warningMax": {
                            "type": "number",
                            "description": "Maximum warning threshold generate it if not provided"
                        }
                    },
                    "required": ["min", "max", "warningMin", "warningMax"],
                    "description": "Normal and warning ranges for the parameter"
                },
                "trend": {
                    "type": "string",
                    "description": "Trend direction (stable, increasing, decreasing, fluctuating) generate it if not provided"
                }
            },
            "required": ["parameter", "value", "unit", "status", "range", "trend"]
        }
    },
    {
        "name": "get_canvas_objects",
        "description": "Get canvas items details for canvas operations and answering questions",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "A query or question or order to find specific canvas objectsId or items for answering questions or canvas operations"
                }
            },
            "required": ["query"]
        }
    },
    {
        "name": "get_easl_answer",
        "description": "Get answer from EASL medical knowledge model for answering questions",
        "parameters": {
            "type": "object",
            "properties": {
                "question": {
                    "type": "string",
                    "description": "Question for EASL medical knowledge model"
                },
                "context": {
                    "type": "string",
                    "description": "Patient context to help EASL model answer the question"
                }
            },
            "required": ["question", "context"]
        }
    }
]